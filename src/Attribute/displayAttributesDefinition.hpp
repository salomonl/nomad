//////////// THIS FILE MUST BE CREATED BY EXECUTING WriteAttributeDefinitionFile ////////////
//////////// DO NOT MODIFY THIS FILE MANUALLY ///////////////////////////////////////////////

#ifndef __NOMAD400_DISPLAYATTRIBUTESDEFINITION__
#define __NOMAD400_DISPLAYATTRIBUTESDEFINITION__

_definition = {
{ "DISPLAY_STATS",  "NOMAD::ArrayOfString",  "BBE OBJ",  " Format for displaying the evaluation points ",  " \n  \n . Format of the outputs displayed at each success (single-objective) \n  \n . Format of the final Pareto front (multi-objective) \n  \n . Displays more points with DISPLAY_ALL_EVAL true \n  \n . Arguments: list of strings possibly including the following keywords: \n     BBE        : blackbox evaluations \n     BBO        : blackbox outputs \n     BLK_EVA    : block evaluation calls \n     BLK_SIZE   : number of points in the block \n     CACHE_HITS : cache hits \n     CACHE_SIZE : cache size \n     CONS_H     : infeasibility (h) value \n     EVAL       : evaluations (includes cache hits) \n     GEN_STEP   : name of the step that generated this point to evaluate \n     H_MAX      : max infeasibility (h) acceptable \n     ITER_NUM   : iteration number in which this evaluation was done \n     LAP        : number of lap evaluations since last reset \n     MESH_INDEX : mesh index \n     MESH_SIZE / DELTA_M : mesh size delta_k^m \n     FRAME_SIZE / DELTA_F : frame size delta_k^f \n     OBJ        : objective function value \n     SGTE       : number of surrogate evaluations since last reset \n     SOL        : current feasible iterate \n     THREAD_NUM : thread number in which this evaluation was done \n     TOTAL_SGTE : total number of surrogate evaluations \n     TIME       : real time in seconds \n     USER       : user-defined string \n  \n . Example: \n     DISPLAY_STATS BBE EVAL ( SOL ) OBJ CONS_H \n  \n . Default: BBE OBJ\n\n",  "  basic display displays output outputs stat stats success successes  "  , "false" , "true" , "true" },
{ "DISPLAY_DEGREE",  "int",  "2",  " Level of verbose during execution ",  " \n  \n . Argument: one integer in {0, 1, 2, 3} (basic) or one string in: \n     . 'NO', 'NO_DISPLAY', \n     . 'MIN', 'MINIMAL', 'MINIMAL_DISPLAY', \n     . 'NORMAL', 'NORMAL_DISPLAY', \n     . 'FULL', 'FULL_DISPLAY' \n      \n . Example: \n     DISPLAY_DEGREE 2    # basic: normal display \n  \n . Default: 2\n\n",  "  basic display verbose output outputs info infos  "  , "false" , "true" , "true" },
{ "DISPLAY_ALL_EVAL",  "bool",  "false",  " Flag to display all evaluations ",  " \n  \n . If true, more points are displayed with parameters DISPLAY_STATS and \n   STATS_FILE \n  \n . If false, only the successful evaluations are displayed. \n  \n . Overrides parameters DISPLAY_INFEASIBLE and DISPLAY_UNSUCCESSFUL \n  \n . Points of the phase one with EB constraint are not displayed \n  \n . Argument: one boolean \n  \n . Example: DISPLAY_ALL_EVAL yes \n  \n . Default: false\n\n",  "  basic display displays stat stats eval evals evaluation evaluations   "  , "false" , "true" , "true" },
{ "DISPLAY_INFEASIBLE",  "bool",  "false",  " Flag to display infeasible ",  " \n  \n . When true, do display iterations for which constraints are violated. \n  \n . When false, only display iterations where the point is feasible. \n  \n . Argument: one boolean \n  \n . Example: DISPLAY_INFEASIBLE true \n  \n . Default: false\n\n",  "  advanced display displays infeasible  "  , "false" , "true" , "true" },
{ "DISPLAY_UNSUCCESSFUL",  "bool",  "true",  " Flag to display unsuccessful ",  " \n  \n . When true, display iterations even when no better solution is found. \n  \n . When false, only display iterations when a better objective value is found. \n  \n . Argument: one boolean ('yes' or 'no') \n  \n . Example: DISPLAY_UNSUCCESSFUL yes \n  \n  \n . Default: true\n\n",  "  advanced display displays success successes failed failure failures fail fails  "  , "false" , "true" , "true" },
{ "STATS_FILE",  "NOMAD::ArrayOfString",  "",  " The name of the stats file ",  " \n  \n . File containing all successes in a formatted way (similar as DISPLAY_STATS in a file) \n  \n . Displays more points when DISPLAY_ALL_EVAL is true \n  \n . Arguments: one string (file name) and one list of strings (for the format of stats) \n  \n . The seed is added to the file name if \n   ADD_SEED_TO_FILE_NAMES=\'yes\' \n  \n . Example: STATS_FILE log.txt BBE SOL f=%.2EOBJ \n  \n  \n . Default: Empty string.\n\n",  "  basic stat stats file files name display displays output outputs  "  , "false" , "false" , "true" },
{ "SOL_FORMAT",  "NOMAD::ArrayOfDouble",  "-",  " Format of the solution ",  " \n  \n . SOL_FORMAT is computed from BB_OUTPUT_TYPE and GRANULARITY \n   parameters. \n   \n . Gives the format precision for display of SOL. May also be used for \n   other ArrayOfDouble of the same DIMENSION (ex. bounds, deltas). \n  \n . Cannot be modified by user. Internal parameter. \n  \n . No default value.\n\n",  "  advanced internal  "  , "false" , "true" , "true" },
{ "DISPLAY_HEADER",  "size_t",  "40",  " Frequency at which the stats header is displayed ",  " \n  \n . Every time this number of stats lines is displayed, the stats header is \n   displayed again. This parameter is for clarity of the display. \n  \n . Value of INF means to never display the header. \n  \n . Default: 40\n\n",  "  advanced  "  , "false" , "true" , "true" },
{ "OBJ_WIDTH",  "size_t",  "0",  " Character width of the objective ",  " \n  \n . OBJ_WIDTH is computed to display the objective correctly when NOMAD is run. \n  \n . Internal parameter. \n  \n . Default: 0\n\n",  "  advanced internal  "  , "false" , "false" , "true" },
{ "MAX_DISPLAY_STEP_LEVEL",  "size_t",  "20",  " Depth of the step after which info is not printed ",  " \n . If a step has more than this number of parent steps, it will not be printed. \n  \n . Only has effect when DISPLAY_DEGREE = FULL. \n  \n . Default: 20\n\n",  "  advanced  "  , "false" , "true" , "true" } };

#endif
