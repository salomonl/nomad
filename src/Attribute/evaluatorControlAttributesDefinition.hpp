//////////// THIS FILE MUST BE CREATED BY EXECUTING WriteAttributeDefinitionFile ////////////
//////////// DO NOT MODIFY THIS FILE MANUALLY ///////////////////////////////////////////////

#ifndef __NOMAD400_EVALUATORCONTROLATTRIBUTESDEFINITION__
#define __NOMAD400_EVALUATORCONTROLATTRIBUTESDEFINITION__

_definition = {
{ "MAX_BB_EVAL",  "size_t",  "INF",  " Stopping criterion on the number of blackbox evaluations ",  " \n  \n . Maximum number of blackbox evaluations \n  \n . Argument: one positive integer \n  \n . An INF value serves to disable the stopping criterion. \n  \n . Does not consider evaluations taken in the cache (cache hits) \n  \n . In bi-objective mode: max number of blackbox evaluations for each MADS run \n  \n . Example: MAX_BB_EVAL 1000 \n  \n . Default: INF\n\n",  "  basic stop stops stopping max maximum criterion criterions blackbox blackboxes bb  "  , "false" , "true" , "true" },
{ "MAX_EVAL",  "size_t",  "INF",  " Stopping criterion on the number of evaluations (blackbox and cache) ",  " \n  \n . Maximum number of evaluations, including evaluations taken in the cache \n   (cache hits) \n  \n . Argument: one positive integer \n  \n . An INF value serves to disable the stopping criterion. \n  \n . Example: MAX_EVAL 1000 \n  \n . Default: INF\n\n",  "  advanced stop stops stopping max maximum criterion criterions blackbox blackboxes bb eval evals evaluation evaluations cache  "  , "false" , "true" , "true" },
{ "OPPORTUNISTIC_EVAL",  "bool",  "true",  " Opportunistic strategy - general flag (terminate evaluations as soon as a success is found) ",  " \n  \n . Opportunistic strategy: Terminate evaluations as soon as a success is found \n  \n . This parameter is the default value for other OPPORTUNISTIC parameters, \n    including Search steps \n  \n . This parameter is the value used for Poll step \n  \n . Argument: one boolean (yes or no) \n  \n . Type 'nomad -h opportunistic' to see advanced options \n  \n . Example: OPPORTUNISTIC_EVAL no  # complete evaluations \n  \n . Default: true\n\n",  "  advanced opportunistic oppor eval evals evaluation evaluations terminate list success successes  "  , "true" , "true" , "true" },
{ "USE_CACHE",  "bool",  "true",  " Use cache in algorithms ",  " \n . When this parameter is false, the Cache is not used at all. Points may be \n   re-evaluated. \n  \n . Recommended when DIMENSION is large and evaluations are not costly. \n  \n . Cache may be used for top algorithm, and disabled for a sub-algorithm. \n  \n . If CACHE_FILE is non-empty, cache file will still be read and written. \n  \n . Default: true\n\n",  "  advanced  "  , "true" , "false" , "true" },
{ "CLEAR_EVAL_QUEUE",  "bool",  "true",  " Opportunistic strategy: Flag to clear EvaluatorControl queue between each run ",  " \n  \n . Opportunistic strategy: If a success is found, clear evaluation queue of  \n   other points. \n  \n . If this flag is false, the points in the evaluation queue that are not yet  \n   evaluated might be evaluated later. \n  \n . If this flag is true, the points in the evaluation queue that are not yet \n   evaluated will be flushed. \n  \n . Outside of opportunistic strategy, this flag has no effect. \n  \n . Default: true\n\n",  "  advanced opportunistic oppor eval evals evaluation evaluations clear flush  "  , "true" , "true" , "true" },
{ "BB_MAX_BLOCK_SIZE",  "size_t",  "1",  " Size of blocks of points, to be used for parallel evaluations ",  " \n . Maximum size of a block of evaluations send to the blackbox \n   executable at once. Blackbox executable can manage parallel \n   evaluations on its own. Opportunistic strategies may apply after \n   each block of evaluations. \n     \n . Depending on the algorithm phase, the blackbox executable will \n   receive at most BB_MAX_BLOCK_SIZE points to evaluate. \n     \n . When this parameter is greater than one, the number of evaluations \n   may exceed the MAX_BB_EVAL stopping criterion. \n     \n . Argument: integer > 0 \n   \n . Example: BB_MAX_BLOCK_SIZE 3 \n            The blackbox executable receives blocks of \n            at most 3 points for evaluation. \n  \n . Default: 1\n\n",  "  advanced block parallel  "  , "true" , "true" , "true" },
{ "MAX_BLOCK_EVAL",  "size_t",  "INF",  " Stopping criterion on the number of blocks evaluations ",  " \n  \n . Maximum number of blocks evaluations \n  \n . Argument: one positive integer \n  \n . An INF value serves to disable the stopping criterion. \n  \n . Example: MAX_BLOCK_EVAL 100 \n  \n . Default: INF\n\n",  "  advances block stop parallel  "  , "true" , "true" , "true" },
{ "MAX_SGTE_EVAL",  "size_t",  "1000",  " Max number of sgtelib model evaluations for each optimization of the surrogate problem ",  " \n . Max number of sgtelib model evaluations for each optimization of the surrogate \n   problem. \n  \n . Argument: one integer > 0 \n  \n . Note: In NOMAD 3, the default is 10000. Early tests in NOMAD 4 show extremely \n   long resolution times for this value. The default value is set to 1000 until \n   more investigation is done. \n  \n . Example: MAX_SGTE_EVAL 5000 \n . Default: 1000\n\n",  "  advanced sgtelib search model model_search  "  , "true" , "true" , "true" } };

#endif
